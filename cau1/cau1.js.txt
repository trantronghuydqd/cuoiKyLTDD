//lll1
import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';
import { View, FlatList, StyleSheet, Text, TouchableOpacity, Image, TextInput, ImageBackground } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { SafeAreaView } from 'react-native-safe-area-context';
import axios from 'axios';

// init state
const initState = {
  products: [],
  cart: []
}

// action
const fetchProductsSS = payload => ({type: "FETCH_PRODUCTS", payload})



// reducer
const productReducer = (state, action) => {
  switch (action.type){
    case "FETCH_PRODUCTS": 
      return {...state, products: action.payload}
    
  }
}
// api

const fetchProducts = (dispatch) => {
  axios.get("https://671bdbea2c842d92c381892a.mockapi.io/PRODUCTS").then(res => dispatch(fetchProductsSS(res.data)))
}


const lorem = "biểu tượng trái tim màu trắng. Biểu tượng trên thẻ chơi cho trái tim. Thay thế phong cách cho từ tình yêu";

const Stack = createStackNavigator()
const ProductContext = createContext()

const mapImage = (nameImage) => {
  switch (nameImage){
    case "product1": return require('./assets/product1.png')
    case "product2": return require('./assets/product2.png')
    case "product3": return require('./assets/product3.png')
    case "product4": return require('./assets/product4.png')
    case "product5": return require('./assets/product5.png')
    case "product6": return require('./assets/product6.png')
  }
}

const HomeScreen = ({ navigation }) => {
  return (
    <ImageBackground source = {require('./assets/background.jpg')}>
    <View style={{flex: 1, alignItems: "center", justifyContent: "center"}}>
      <Text style = {{fontSize: 24, fontWeight: "bold", color: "black"}}>Renovate your interrior</Text>
      <Image source = {mapImage('product1')} style = {{width: 200, height: 200, margin: 50}}></Image>
      <TouchableOpacity onPress = {() => navigation.navigate('Products')} style = {{ backgroundColor: "black", borderRadius: 50, padding: 20}}><Text style = {{color: "white"}}>Go to catalog</Text></TouchableOpacity>
    </View>
    
    </ImageBackground>
  )
}






export default function App() {
  const [state, dispatch] = useReducer(productReducer, initState); // Using useReducer here

  return (
    <ProductContext.Provider value={{ state, dispatch }}> {/* Provide value directly */}
      <NavigationContainer>
        <Stack.Navigator>
          <Stack.Screen name="HomeSrceen" component={HomeScreen} />
          
        </Stack.Navigator>
      </NavigationContainer>
    </ProductContext.Provider>
  );
}
// ... (styles)

const styles = StyleSheet.create({
  
});